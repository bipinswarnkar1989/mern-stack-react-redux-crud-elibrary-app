{"version":3,"sources":["../server/server.js"],"names":["Promise","global","connect","useMongoClient","install","app","use","req","res","next","header","static","urlencoded","extended","json","end","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,mBAASA,OAAT,GAAmBC,OAAOD,OAA1B;AACA,mBAASE,OAAT,CAAiB,2BAAjB,EAA8C;AAC5CC,kBAAgB;AAD4B,CAA9C;;AAIA,2BAAiBC,OAAjB;;AAEA,MAAMC,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC7BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD;AACH,CAJD;;AAMAJ,IAAIC,GAAJ,CAAQ,kBAAQK,MAAR,CAAe,QAAf,CAAR;;AAEA;AACAN,IAAIC,GAAJ,CAAQ,qBAAWM,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAR,IAAIC,GAAJ,CAAQ,qBAAWQ,IAAX,EAAR;AACAT,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEAD,IAAIC,GAAJ,CAAQ,WAAR;AACAD,IAAIC,GAAJ,CAAQ,gBAAR;;AAIA;AACAD,IAAIC,GAAJ,CAAQ,UAASC,GAAT,EAAaC,GAAb,EAAiB;AACvBA,MAAIO,GAAJ,CAAQ,gBAAR;AACD,CAFD;;AAIAV,IAAIW,MAAJ,CAAW,IAAX,EAAgB,MAAM;AACpBC,UAAQC,GAAR,CAAY,8BAAZ;AACD,CAFD","file":"server.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport SourceMapSupport from 'source-map-support';\nimport path from 'path';\nimport logger from 'morgan';\nimport mongoose from 'mongoose';\n\nimport bookRoutes from './routes/book.server.route';\nimport favouriteRoutes from './routes/favourite.server.route';\n\nmongoose.Promise = global.Promise;\nmongoose.connect('mongodb://localhost/myapp', {\n  useMongoClient: true,\n});\n\nSourceMapSupport.install();\n\nconst app = express();\n\napp.use(function(req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    next();\n});\n\napp.use(express.static('static'));\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json());\napp.use(logger('dev'));\n\napp.use('/api/book',bookRoutes);\napp.use('/api/favourite',favouriteRoutes);\n\n\n\n//catch 404\napp.use(function(req,res){\n  res.end('Page Not Found');\n})\n\napp.listen(8080,() => {\n  console.log('App Server Listening at 8080');\n})\n"]}