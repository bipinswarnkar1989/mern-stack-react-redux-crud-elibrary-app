{"version":3,"sources":["../server/server.js"],"names":["Promise","global","connect","useMongoClient","install","app","use","req","res","next","header","static","join","__dirname","urlencoded","extended","json","get","sendFile","end","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,mBAASA,OAAT,GAAmBC,OAAOD,OAA1B;AACA,mBAASE,OAAT,CAAiB,2BAAjB,EAA8C;AAC5CC,kBAAgB;AAD4B,CAA9C;;AAIA,2BAAiBC,OAAjB;;AAEA,MAAMC,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC7BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD;AACH,CAJD;;AAMAJ,IAAIC,GAAJ,CAAQ,kBAAQK,MAAR,CAAe,SAAf,CAAR;AACAN,IAAIC,GAAJ,CAAQ,kBAAQK,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAGA;AACAR,IAAIC,GAAJ,CAAQ,qBAAWQ,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAV,IAAIC,GAAJ,CAAQ,qBAAWU,IAAX,EAAR;AACAX,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEAD,IAAIC,GAAJ,CAAQ,WAAR;AACAD,IAAIC,GAAJ,CAAQ,gBAAR;;AAGA;AACA;AACAD,IAAIY,GAAJ,CAAQ,GAAR,EAAa,CAACV,GAAD,EAAMC,GAAN,KAAc;AACzBA,MAAIU,QAAJ,CAAa,eAAKN,IAAL,CAAUC,YAAU,oBAApB,CAAb;AACD,CAFD;;AAIA;AACAR,IAAIC,GAAJ,CAAQ,CAACC,GAAD,EAAKC,GAAL,KAAa;AACnBA,MAAIW,GAAJ,CAAQ,gBAAR;AACD,CAFD;;AAIAd,IAAIe,MAAJ,CAAW,IAAX,EAAgB,MAAM;AACpBC,UAAQC,GAAR,CAAY,8BAAZ;AACD,CAFD","file":"server.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport SourceMapSupport from 'source-map-support';\nimport path from 'path';\nimport logger from 'morgan';\nimport mongoose from 'mongoose';\n\nimport bookRoutes from './routes/book.server.route';\nimport favouriteRoutes from './routes/favourite.server.route';\n\nmongoose.Promise = global.Promise;\nmongoose.connect('mongodb://localhost/myapp', {\n  useMongoClient: true,\n});\n\nSourceMapSupport.install();\n\nconst app = express();\n\napp.use(function(req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    next();\n});\n\napp.use(express.static('uploads'));\napp.use(express.static(path.join(__dirname, 'static')));\n\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(logger('dev'));\n\napp.use('/api/book',bookRoutes);\napp.use('/api/favourite',favouriteRoutes);\n\n\n// The \"catchall\" handler: for any request that doesn't\n// match one above, send back React's index.html file.\napp.get('*', (req, res) => {\n  res.sendFile(path.join(__dirname+'/public/index.html'));\n});\n\n//catch 404\napp.use((req,res) => {\n  res.end('Page Not Found');\n})\n\napp.listen(8080,() => {\n  console.log('App Server Listening at 8080');\n})\n"]}